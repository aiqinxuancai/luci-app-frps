#!/bin/sh /etc/rc.common
# Copyright 2020-2024 lwz322 <lwz322@qq.com>
# Licensed to the public under the MIT License.

# 新版 frps init 脚本，使用统一的 TOML 配置

START=99
USE_PROCD=1

NAME="frps"
PROG="/usr/bin/frps"
CUSTOM_PROG="/usr/share/frps_custom/frps"
CONFIG_FILE="/var/etc/frps.toml"

start_service() {
    # 从 UCI 加载配置
    config_load "$NAME"
    config_get_bool enabled main enabled 0
    config_get toml_config main toml_config ''

    # 如果未启用，则不执行任何操作
    if [ "$enabled" -eq 0 ]; then
        return 1
    fi

    # 检查自定义 frps 是否存在，如果存在则优先使用
    if [ -x "$CUSTOM_PROG" ]; then
        PROG="$CUSTOM_PROG"
    fi

    # 检查 frps 程序是否存在且可执行
    if [ ! -x "$PROG" ]; then
        echo "Error: $PROG not found or not executable" >&2
        return 1
    fi

    # 检查 TOML 配置是否为空
    if [ -z "$toml_config" ]; then
        echo "Error: TOML configuration is empty. Please configure it in LuCI." >&2
        return 1
    fi

    # 创建配置文件目录
    mkdir -p "$(dirname "$CONFIG_FILE")"

    # 将 UCI 中的 TOML 配置写入文件
    # 使用 printf 是为了更好地处理多行字符串
    printf '%s' "$toml_config" > "$CONFIG_FILE"

    # 使用 procd 启动 frps 进程
    procd_open_instance
    procd_set_param command "$PROG" -c "$CONFIG_FILE"
    procd_set_param respawn
    procd_set_param file "$CONFIG_FILE"
    procd_close_instance
}

service_triggers() {
    # 当 /etc/config/frps 配置文件发生变化时，触发重载
    procd_add_reload_trigger "$NAME"
}

reload_service() {
    # 从 UCI 加载配置
    config_load "$NAME"
    config_get_bool enabled main enabled 0
    config_get toml_config main toml_config ''

    # 如果未启用，则不执行任何操作
    if [ "$enabled" -eq 0 ]; then
        return 1
    fi

    # 创建配置文件目录
    mkdir -p "$(dirname "$CONFIG_FILE")"

    # 将 UCI 中的 TOML 配置写入文件
    printf '%s' "$toml_config" > "$CONFIG_FILE"

    # 向 frps 进程发送 SIGHUP 信号以重新加载配置
    procd_send_signal "$NAME"
}

stop_service() {
    # procd 会自动处理停止服务
    # procd_send_signal 会向由 procd 管理的该服务的所有实例发送终止信号
    procd_send_signal "$NAME"
}
